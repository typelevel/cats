# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4, 3.0.0-M2, 3.0.0-M3]
        java:
          - adopt@1.8
          - adopt@1.11
          - adopt@1.15
          - graalvm-ce-java8@20.2.0
        platform: [jvm, js]
        exclude:
          - platform: js
            java: adopt@1.11
          - platform: js
            java: adopt@1.15
          - platform: js
            java: graalvm-ce-java8@20.2.0
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Validate JavaScript
        if: matrix.platform == 'js'
        run: sbt ++${{ matrix.scala }} validateAllJS

      - name: Validate JVM (scala 2)
        if: matrix.platform == 'jvm' && (matrix.scala != '3.0.0-M2' && matrix.scala != '3.0.0-M3')
        run: sbt ++${{ matrix.scala }} buildJVM bench/test

      - name: Validate JVM (scala 3)
        if: matrix.platform == 'jvm' && (matrix.scala == '3.0.0-M2' || matrix.scala == '3.0.0-M3')
        run: sbt ++${{ matrix.scala }} buildJVM bench/test

      - name: Binary compatibility ${{ matrix.scala }}
        if: matrix.platform == 'jvm' && (matrix.scala != '3.0.0-M2' && matrix.scala != '3.0.0-M3')
        run: sbt ++${{ matrix.scala }} clean validateBC

  scalafix:
    name: Scalafix
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4, 3.0.0-M2, 3.0.0-M3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Scalafix tests
        run: |
          cd scalafix
          sbt test

  linting:
    name: Linting
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4, 3.0.0-M2, 3.0.0-M3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check formatting
        if: (matrix.scala != '3.0.0-M2' && matrix.scala != '3.0.0-M3')
        run: sbt ++${{ matrix.scala }} fmtCheck

  microsite:
    name: Microsite
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup Ruby
        uses: actions/setup-ruby@v1

      - name: Setup Jekyll
        run: gem install jekyll -v 4.0.0

      - name: Build the microsite
        run: sbt ++${{ matrix.scala }} docs/makeMicrosite